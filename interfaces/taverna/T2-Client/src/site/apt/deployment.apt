Deployment Guide

	To install the application locally, you have to get the source files, build them and deploy 
	the resulting archives on a Java application server. This guide explains how to retrieve the
	sources using <<<svn>>> utility, how to build the sources using Maven 2, and how to deploy
	the application in Tomcat 6. It is assumed that those tools are already installed on your system.
	
*HTTPS support

	If you want to execute workflows that contain HTTPS-enabled web services, you need to
	import the certificates into the keystore of your java installation. An example for java 6
	on Linux:
	
		* Get the server certificate as a PEM file. For example, Firefox can export the 
		certificate as "X.509 certificate (PEM)".
		
		* Execute as root: keytool -import -file certificate.pem -keystore $JAVA_HOME/jre/lib/security/cacerts 
		-alias myWebServiceCertificate
		
		(default password for the keystore is "changeit")

*Authentication

	Currently, it is not possible to execute workflows that contain web services with authentication
	using T2-Client.

*Preparing the dependent libraries

	The application needs some classes from the Taverna Server which are currently not available
	through a central Maven repository. That's why they must be first installed in the local 
	repository. The project containing the POM file that handles this task can be retrieved 
	with the command:
	
		* svn checkout https://develop.sub.uni-goettingen.de/repos/impact/bird/taverna-rest-api
	
	In the downloaded directory, execute the Maven command:
	
		* mvn install
	
*Getting the source files

	To retrieve the project containing the source files of T2-Client, use an SVN plugin in an IDE like 
	Eclipse, or execute the following
	command:
	
		*svn checkout https://develop.sub.uni-goettingen.de/repos/impact/bird/T2-Client/trunk T2-Client
		
	The application consists of three modules whose documentations are available separately in the menu
	on the left. The modules <<<workflow-client>>> and <<<metrics-toolkit>>> are JSP-frontends that 
	use the library classes from the <<<workflow-lib>>> module.
	
*Building the application

	The project is managed using Maven 2. Again, you can use an IDE to build the sources.
	Alternatively, you can execute the following command in the project directory:
	
	* mvn package
	
*Deploying the application

	Maven generates a WAR archive for each frontend module (<<<workflow-client>>> and <<<metrics-toolkit>>>)
	in the corresponding <<<target>>> directory. In Tomcat, you can deploy 
	those archives using the Tomcat Manager application. Or, simply copy the archives into the
	<<<webapp>>> directory of your Tomcat installation and restart Tomcat.

	If you want to run the application as a Dynamic Web Project in a Tomcat instance inside 
	Eclipse 3.5, you have to import the project into the workspace (the m2eclipse plug-in must be installed):
	
		* go to File -> Import -> Maven -> Checkout Maven Projects From SCM
			
		* choose "svn" and input "https://develop.sub.uni-goettingen.de/repos/impact/bird/T2-Client/trunk"
		
		* click "Finish"
		
	Now you should be able to add the two frontend projects to your Tomcat Server configuration.
	