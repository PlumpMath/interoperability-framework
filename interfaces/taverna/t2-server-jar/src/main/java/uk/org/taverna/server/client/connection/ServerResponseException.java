/*
 * Copyright (c) 2012 The University of Manchester, UK.
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the names of The University of Manchester nor the names of its
 *   contributors may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

package uk.org.taverna.server.client.connection;

import java.net.URI;

import uk.org.taverna.server.client.ServerException;

/**
 * This is the abstract superclass of all the exceptions generated by server
 * responses.
 * 
 * @author Robert Haines
 * @since 0.9.0
 */
public abstract class ServerResponseException extends ServerException {
	private static final long serialVersionUID = 1L;

	/**
	 * The {@link URI} for which this response was received.
	 */
	protected final URI uri;

	/**
	 * The status code of the response.
	 */
	protected final int statusCode;

	/**
	 * Construct the exception with the specified {@link URI} and message.
	 * 
	 * @param uri
	 *            the address that relates to this response.
	 * @param message
	 *            the message explaining this exceptional response.
	 */
	protected ServerResponseException(URI uri, int statusCode, String message) {
		super(String.format("%s (%d): %s", message, statusCode,
				uri.toASCIIString()));

		this.uri = uri;
		this.statusCode = statusCode;
	}

	/**
	 * Get the {@link URI} for which this response was received.
	 * 
	 * @return the address that relates to this response.
	 */
	public URI getURI() {
		return uri;
	}

	/**
	 * Get the status code of this response.
	 * 
	 * @return the status code of this response.
	 */
	public int getStatusCode() {
		return statusCode;
	}
}
